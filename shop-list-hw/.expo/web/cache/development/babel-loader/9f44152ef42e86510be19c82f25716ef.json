{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cemile\\\\Desktop\\\\shop-list-hw\\\\App.js\";\nimport React, { useState } from 'react';\nimport { RootDrawer } from \"./navigation/RootDrawer\";\nimport { AppLoading } from 'expo';\nimport { loadFonts } from \"./styles/fonts\";\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  if (!loaded) {\n    return React.createElement(AppLoading, {\n      startAsync: loadFonts,\n      onFinish: function onFinish() {\n        return setLoaded(true);\n      },\n      onError: function onError() {\n        return console.log('Loading failed');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return React.createElement(RootDrawer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/Cemile/Desktop/shop-list-hw/App.js"],"names":["React","useState","RootDrawer","AppLoading","loadFonts","App","loaded","setLoaded","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,UAAR;AACA,SAAQC,UAAR,QAAyB,MAAzB;AACA,SAASC,SAAT;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEDJ,QAAQ,CAAC,KAAD,CAFP;AAAA;AAAA,MAErBK,MAFqB;AAAA,MAEdC,SAFc;;AAG9B,MAAG,CAACD,MAAJ,EAAW;AACT,WAAO,oBAAC,UAAD;AACN,MAAA,UAAU,EAAEF,SADN;AAEP,MAAA,QAAQ,EAAE;AAAA,eAAMG,SAAS,CAAC,IAAD,CAAf;AAAA,OAFH;AAGN,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAAA,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD;;AACC,SAAS,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAT;AACD","sourcesContent":["import React,{useState} from 'react';\nimport {RootDrawer} from './navigation/RootDrawer';\nimport {AppLoading} from 'expo';\nimport { loadFonts } from './styles/fonts';\n\n\nexport default function App() {\n  \n  const [loaded,setLoaded] = useState(false);\nif(!loaded){\n  return <AppLoading\n   startAsync={loadFonts} \n  onFinish={() => setLoaded(true)}\n   onError={() => console.log('Loading failed')}\n   />\n}\n  return   <RootDrawer/>\n}\n\n"]},"metadata":{},"sourceType":"module"}